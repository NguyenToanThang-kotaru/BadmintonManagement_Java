package GUI;

import DAO.ProductDAO;
import DTO.ProductDTO;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import javax.swing.table.TableColumnModel;
import java.util.List;

public class GUI_Product extends JPanel {

    private JPanel midPanel, topPanel, botPanel;
    private JTable productTable;
    private CustomTable tableModel;
    private JComboBox<String> roleComboBox;
    private CustomButton saveButton, addButton;
    private CustomSearch searchField;

    public GUI_Product() {
        setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        setBorder(new EmptyBorder(10, 10, 10, 10));
        setBackground(new Color(200, 200, 200));

        // ========== PANEL TR√äN C√ôNG ==========
        topPanel = new JPanel(new BorderLayout(10, 10));
        topPanel.setPreferredSize(new Dimension(0, 60));
        topPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10)); // Padding tr√™n-d∆∞·ªõi 10px
        topPanel.setBackground(Color.WHITE);
        // Thanh t√¨m ki·∫øm (70%)
        searchField = new CustomSearch(250, 30);
        searchField.setFont(new Font("Arial", Font.PLAIN, 14));
        searchField.setBackground(Color.WHITE);
//        searchField.setPreferredSize(new Dimension(0, 30));
        topPanel.add(searchField, BorderLayout.CENTER);

        // N√∫t "Th√™m t√†i kho·∫£n" (30%)
        addButton = new CustomButton("+ Th√™m s·∫£n ph·∫©m");
        addButton.setFont(new Font("Arial", Font.BOLD, 14));
        addButton.setPreferredSize(new Dimension(170, 30));
        topPanel.add(addButton, BorderLayout.EAST);

//        // ========== B·∫¢NG HI·ªÇN TH·ªä ==========
        midPanel = new JPanel(new BorderLayout());
        midPanel.setBackground(Color.WHITE);
        String[] columnNames = {"M√£ S·∫£n Ph·∫©m", "T√™n S·∫£n Ph·∫©m", "Gi√°", "S·ªë l∆∞·ª£ng", "M√£ Th∆∞∆°ng Hi·ªáu", "Th√¥ng S·ªë Kƒ© Thu·∫≠t", "M√£ Lo·∫°i"};
        tableModel = new CustomTable(columnNames);
        productTable = tableModel.getAccountTable();
        TableColumnModel columnModel = productTable.getColumnModel();
//        columnModel.getColumn(1).setPreferredWidth(200); 
        columnModel.getColumn(2).setPreferredWidth(15);
//        columnModel.getColumn(3).setPreferredWidth(15); 
//        columnModel.getColumn(4).setPreferredWidth(100); 

        // ScrollPane ƒë·ªÉ b·∫£ng c√≥ thanh cu·ªôn
        CustomScrollPane scrollPane = new CustomScrollPane(productTable);

        midPanel.add(scrollPane, BorderLayout.CENTER);

        // ========== PANEL CHI TI·∫æT T√ÄI KHO·∫¢N ==========  s
        botPanel = new JPanel(new BorderLayout(20, 0)); // Kho·∫£ng c√°ch gi·ªØa 2 ph·∫ßn
        botPanel.setBackground(Color.WHITE);
        botPanel.setBorder(BorderFactory.createTitledBorder("Chi ti·∫øt s·∫£n ph·∫©m"));

        JPanel leftPanel = new JPanel(null);

        leftPanel.setPreferredSize(new Dimension(310, 290));
        leftPanel.setBackground(Color.WHITE);

        JLabel imageLabel = new JLabel();
        imageLabel.setBounds(30, 10, 230, 220);
        imageLabel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        leftPanel.add(imageLabel);

// Ph·∫ßn ph·∫£i
        JPanel righPanel = new JPanel();
        righPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
        righPanel.setBackground(Color.WHITE);
        JPanel infoPanel = new JPanel(new GridBagLayout());
        infoPanel.setBackground(Color.WHITE);

        GridBagConstraints gbcInfo = new GridBagConstraints();
        gbcInfo.insets = new Insets(5, 5, 5, 5);
        gbcInfo.anchor = GridBagConstraints.WEST;

// Th√™m v√†o infoPanel
        gbcInfo.gridx = 0;
        gbcInfo.gridy = 0;
        infoPanel.add(new JLabel("M√£ s·∫£n ph·∫©m: "), gbcInfo);
        gbcInfo.gridx = 1;
        JLabel productLabel = new JLabel("Ch·ªçn s·∫£n ph·∫©m");
        infoPanel.add(productLabel, gbcInfo);

        gbcInfo.gridx = 0;
        gbcInfo.gridy = 1;
        infoPanel.add(new JLabel("T√™n s·∫£n ph·∫©m: "), gbcInfo);
        gbcInfo.gridx = 1;
        JLabel namePDLabel = new JLabel("");
        namePDLabel.setPreferredSize(new Dimension(200, 20));
        infoPanel.add(namePDLabel, gbcInfo);

        gbcInfo.gridx = 0;
        gbcInfo.gridy = 2;
        infoPanel.add(new JLabel("Gi√°: "), gbcInfo);
        gbcInfo.gridx = 1;
        JLabel priceLabel = new JLabel("");
        infoPanel.add(priceLabel, gbcInfo);

        gbcInfo.gridx = 0;
        gbcInfo.gridy = 3;
        infoPanel.add(new JLabel("S·ªë l∆∞·ª£ng: "), gbcInfo);
        gbcInfo.gridx = 1;
        JLabel quantityLabel = new JLabel("");
        infoPanel.add(quantityLabel, gbcInfo);

        gbcInfo.gridx = 0;
        gbcInfo.gridy = 4;
        infoPanel.add(new JLabel("M√£ th∆∞∆°ng hi·ªáu: "), gbcInfo);
        gbcInfo.gridx = 1;
        JLabel MaThHieuLabel = new JLabel("");
        infoPanel.add(MaThHieuLabel, gbcInfo);

        gbcInfo.gridx = 0;
        gbcInfo.gridy = 5;
        infoPanel.add(new JLabel("Th√¥ng s·ªë k·ªπ thu·∫≠t: "), gbcInfo);
        gbcInfo.gridx = 1;
        JLabel TSKTLabel = new JLabel("");
        infoPanel.add(TSKTLabel, gbcInfo);

        gbcInfo.gridx = 0;
        gbcInfo.gridy = 6;
        infoPanel.add(new JLabel("T√™n lo·∫°i: "), gbcInfo);
        gbcInfo.gridx = 1;
        JLabel TypeidLabel = new JLabel("");
        infoPanel.add(TypeidLabel, gbcInfo);

// N√∫t L∆∞u
        gbcInfo.gridx = 0;
        gbcInfo.gridy = 7;
        gbcInfo.gridwidth = 2;
        saveButton = new CustomButton("üíæ L∆∞u");
        saveButton.setPreferredSize(new Dimension(80, 30));
        infoPanel.add(saveButton, gbcInfo);

// Th√™m infoPanel v√†o righPanel
        righPanel.add(infoPanel);

// Th√™m leftPanel v√† righPanel v√†o botPanel
        botPanel.add(leftPanel, BorderLayout.WEST);
        botPanel.add(righPanel, BorderLayout.CENTER);

        productTable.getSelectionModel().addListSelectionListener(e -> {
            int selectedRow = productTable.getSelectedRow();
            if (selectedRow != -1) {
                String productID = (String) productTable.getValueAt(selectedRow, 0);
                ProductDTO product = ProductDAO.getProduct(productID);

                // C·∫≠p nh·∫≠t th√¥ng tin s·∫£n ph·∫©m
                productLabel.setText(String.valueOf(product.getProductID()));
                namePDLabel.setText(product.getProductName());
                priceLabel.setText(String.valueOf(product.getGia()));
                quantityLabel.setText(String.valueOf(product.getSoluong()));
                MaThHieuLabel.setText(String.valueOf(product.getMaThuongHieu()));
                TSKTLabel.setText(product.getTSKT());
                TypeidLabel.setText(product.getML());

                // C·∫≠p nh·∫≠t ·∫£nh
                String productImg = product.getAnh();
                if (productImg != null && !productImg.isEmpty()) {
                    String imagePath = "/images/" + productImg;
                    java.net.URL imageUrl = getClass().getResource(imagePath);
                    if (imageUrl != null) {
                        ImageIcon productIcon = new ImageIcon(imageUrl);
                        Image img = productIcon.getImage().getScaledInstance(220, 220, Image.SCALE_SMOOTH);
                        imageLabel.setIcon(new ImageIcon(img));
                    } else {
                        imageLabel.setIcon(null);
                    }
                } else {
                    imageLabel.setIcon(null);
                }
            }
        });

        add(topPanel);
        add(midPanel);
        add(botPanel);
        loadProductData();
    }

    private void loadProductData() {
        List<ProductDTO> productList = ProductDAO.getAllProducts();
        for (ProductDTO product : productList) {
            tableModel.addRow(new Object[]{
                product.getProductID(), product.getProductName(), product.getGia(),
                product.getSoluong(), product.getMaThuongHieu(), product.getTSKT(), product.getML()
            });
        }
    }
}
